This is a dotfiles repository managed by Ansible. It is organized into roles that configure a host machine and various Distrobox containers. The roles manage everything from the desktop environment and terminal to development tools and application configs.

## Workflow

This repository is managed directly with Ansible.

1.  **Host Setup**: To configure the host machine, run:
    ```bash
    ansible-playbook host.yaml
    ```
2.  **Distrobox Containers Setup**: To configure the Distrobox containers defined in `inventory.yaml`, run:
    ```bash
    ansible-playbook -i inventory.yaml boxes.yaml
    ```

## Commit Style

Commit messages should be concise and descriptive, without conventional commit prefixes like `chore:` or `feat:`.

## Roles

### `desktop`

This role configures the host machine's desktop environment. It manages:

*   **GNOME settings:** Customizes the GNOME desktop environment.
*   **Fonts:** Installs the Iosevka Timbuktu font.
*   **Backgrounds:** Manages a large collection of desktop backgrounds.

### `common-home`

This role manages common configuration files for the user's home directory. It includes settings for:

*   **Shell:** `bash_profile` and `bashrc`
*   **Git:** `gitconfig`, `delta-themes.gitconfig`, and `excludes`
*   **Kitty:** `kitty.conf` and session files
*   **Lazygit:** `config.yml`
*   **Neovim:** A detailed configuration with numerous plugins.
*   **Starship:** `starship.toml` for a custom shell prompt.

### `distrobox` and `box`

These roles work together to manage the Distrobox containers.

*   **`distrobox`:** This role appears to handle the creation and management of the Distrobox containers themselves, including setting up worktrees.
*   **`box`:** This role seems to be responsible for provisioning the software and configurations within the Distrobox containers.

### Development Environments

Roles like `elixir`, `ruby`, and `nvim` are dedicated to setting up specific development environments.

### Git Worktree Management

The `worktrees.yaml` playbook provides a sophisticated workflow for creating, managing, and cleaning up Git worktrees.
